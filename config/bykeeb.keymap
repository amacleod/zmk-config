/*
 * Copyright (c) 2025 Allister MacLeod
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"

#include <behaviors/num_word.dtsi>

/ {
  keymap {
    compatible = "zmk,keymap";
    hands_down_neu_layer {
// ,-----------------------------.               ,-----------------------------.
// |  W  |  F  |  M  |  P  |  V  |               | # @ | . : | ' ! | " ? |  J  |
// |  R  |  S  |  N  |  T  |  B  |               | , ; |  A  |  E  |  I  |  H  |
// |  X  |  C  |  L  |  D  |  G  |-----.   ,-----|  -  |  U  |  O  |  Y  |  K  |
// `-----------------| SYM |Shift| Esc |   |Bksp | Spc | NAV |-----------------'
      bindings = <
&kp W &kp F &kp M &kp P &kp V                &hash_at  &dot_cln &sqt_bang &dqt_ques &kp J
&kp R &kp S &kp N &kp T &kp B                &com_semi &kp A    &kp E     &kp I     &kp H
&kp X &kp C &kp L &kp D &kp G                &kp MINUS &kp U    &kp O     &kp Y     &kp K
           &kp LS(S) &smart_shift &kp ESC   &kp BACKSPACE &kp SPACE &kp LS(N)
      >;
      display-name = "HDNeu";
    };
  };

  behaviors {
    // Symbol morphs for non-conventional shifting.
    hash_at: morph_octothorpe_amphora {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp HASH>, <&kp AT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    dot_cln: morph_period_colon {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp COLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    sqt_bang: morph_apostrophe_exclamation {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp SQT>, <&kp EXCL>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    dqt_ques: morph_quote_question {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp DQT>, <&kp QMARK>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    com_semi: morph_comma_semicolon {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp SEMICOLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    slashes: morph_slash_backslash {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp SLASH>, <&kp BACKSLASH>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // Morph for smart-shift inspired by urob.
    smart_shift: morph_smart_shift {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&sk LSHIFT>, <&caps_word>;
      mods = <(MOD_LSFT)>;
    };
  };
};
