/*
 * Copyright (c) 2024 Allister MacLeod
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/key-labels/34.h"

#include "glam-util.dtsi"

#define FACTORY 0
#define OVERLAY 1
#define QWERTY  2
#define KEEBCTL 3

#define UNUSED 0

#include "glam-bt-kbdctl.dtsi"

/ {
keymap {
  compatible = "zmk,keymap";

  factorio_layer {
// ,-----------------------------.   ,-----------------------------.
// |  T  |  Q  |  W  |  E  |  R  |   |  Y  |  U  |  I  |  O  |  P  |
// |Shift|  A  |  S  |  D  |  F  |   |  H  |  J  |  K  |  L  |  ;  |
// | Ctrl|  Z  |  X  |  C  |  V  |   |  N  |  M  |  ,  |  .  |  /  |
// `-----------------| OVL |Space|   | Spc |QWRTY|-----------------'
    bindings = <
 &kp T      &kp Q &kp W &kp E &kp R        &qkp Y &qkp U &qkp I     &qkp O   &qkp P
 &kp LSHIFT &kp A &kp S &kp D &kp F        &qkp H &qkp J &qkp K     &qkp L   &qkp SEMI
 &kp LCTRL  &kp Z &kp X &kp C &tch V    &qkp N &qkp M &qkp COMMA &qkp DOT &qkp FSLH
              &mo OVERLAY &kp SPACE      &qkp SPACE &to QWERTY
    >;
    display-name = "F A C";
  };

  overlay_layer {
    bindings = <
// ,-----------------------------.   ,-----------------------------.
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// |Enter|Alt-A| KP+ |Alt-T|F-Lok|   |XXXXX|XXXXX|XXXXX|XXXXX|XXXXX|
// | Alt | ^Y  | KP- |Alt-C|M-g/r|   |XXXXX|XXXXX|XXXXX|XXXXX|XXXXX|
// `-----------------|#####|     |   |Base |QWRTY|-----------------'
 &kp N1   &kp N2    &kp N3       &kp N4    &kp N5             &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
 &kp RET  &kp LA(A) &kp KP_PLUS  &kp LA(T) &kt F              &none  &none  &none  &none  &none
 &kp LALT &kp LC(Y) &kp KP_MINUS &kp LA(C) &tth LA(G) LA(R)   &none  &none  &none  &none  &none
                                  &trans &trans             &trans &to QWERTY
    >;
    display-name = "T O R Y";
  };

    qwerty_layer {
// ,-----------------------------.   ,-----------------------------.
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |
// `-----------------| Esc |Shift|   | Spc |#####|-----------------'
    bindings = <
  &kp Q   &kp W   &kp E   &kp R   &kp T     &kp Y  &kp U   &kp I     &kp O   &kp P
  &kp A   &kp S   &kp D   &kp F   &kp G     &kp H  &kp J   &kp K     &kp L   &kp SEMI
  &kp Z   &kp X   &kp C   &kp V   &kp B     &kp N  &kp M   &kp COMMA &kp DOT &kp FSLH
                      &kp ESC &kp LSHIFT   &kp SPACE &tog QWERTY
    >;
    display-name = "QWERTY";
  };

  keyboard_control_layer {
    bindings = <
// ,-----------------------------.   ,-----------------------------.
// |     |     |     |     | DFU |   | DFU |     |     |     |     |
// |     |     |     |     |     |   |     |     |     |     |     |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   |ClCur| Clr--[ + ]--All |     |
// `-----------------|     |     |   |     |Base |-----------------'
  &none  &none  &none  &none  &bootloader  &bootloader &none &none &none &none
  &none  &none  &none  &none  &none        &none &none &none &none &none
  &btp 0 &btp 1 &btp 2 &btp 3 &btp 4       &btcc &none &none &none &none
                          &none &none     &none &tog KEEBCTL
    >;
    display-name = "KBDCTL";
  };
}; // end keymap

combos {
  compatible = "zmk,combos";

#include "glam-factorio-combos.dtsi"

#include "glam-sym-nav-num-combos.dtsi"

  // All four thumb keys for keyboard control layer.
  combo_thumbs_keyboard_control {
    timeout-ms = <50>;
    key-positions = <LH1 LH0 RH0 RH1>;
    bindings = <&tog KEEBCTL>;
  };
  // Right hand index and ring fingers for BT_CLR_ALL but only on KEEBCTL layer.
  combo_bt_clear_all {
    timeout-ms = <50>;
    key-positions = <RB1 RB3>;
    bindings = <&btclall>;
    layers = <KEEBCTL>;
  };

}; // end combos

behaviors {
  // Hold tap where the tap is a sticky layer, kind of the converse of
  // a layer-tap. This has a short tapping term since it is meant for
  // the Factorio layer's "hold to pick up from ground (F), tap for
  // sticky overlay" binding, and I do not want to have to wait too
  // terribly long for stuff to start getting picked up.
  slt: sticky_layer_tap {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    bindings = <&kp &sl>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <100>;
  };
  // Hold to invoke the tap-followed-by-H macro. For the use case of
  // sending VVH for Factorio flipping, use a no-op keycode like
  // K_CANCEL as the tap portion.
  hmtk: hold_macro_tap_key {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    bindings = <&tfh &kp>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
  };
}; // end behaviors

macros {
  qkp: qwerty_keypress {
    compatible = "zmk,behavior-macro-one-param";
    #binding-cells = <1>;
    bindings
      = <&to QWERTY>
      , <&macro_param_1to1>
      , <&kp MACRO_PLACEHOLDER>
      ;
  };
  tth: tap_into_hold {
    compatible = "zmk,behavior-macro-two-param";
    #binding-cells = <2>;
    bindings
      = <&macro_param_1to1>
      , <&kp MACRO_PLACEHOLDER>
      , <&macro_press>
      , <&macro_param_2to1>
      , <&mt MACRO_PLACEHOLDER K_CANCEL>
      , <&macro_pause_for_release>
      , <&macro_release>
      , <&macro_param_2to1>
      , <&mt MACRO_PLACEHOLDER K_CANCEL>
      ;
  };
  // Tap the first key, but if held then tap again to cancel followed
  // by a tap of H.
  // This supposes that the first key is reversible or a toggle, like
  // the "flip entity" buttons in Factorio.
  tch: tap_into_cancel_tap_haitch {
    compatible = "zmk,behavior-macro-one-param";
    #binding-cells = <1>;
    bindings
      = <&macro_param_1to1>
      , <&kp MACRO_PLACEHOLDER>
      , <&macro_press>
      , <&macro_param_1to1>
      , <&hmtk MACRO_PLACEHOLDER K_CANCEL>
      , <&macro_pause_for_release>
      , <&macro_release>
      , <&macro_param_1to1>
      , <&hmtk MACRO_PLACEHOLDER K_CANCEL>
      ;
  };
  tfh: tap_followed_by_haitch {
    compatible = "zmk,behavior-macro-one-param";
    #binding-cells = <1>;
    bindings
      = <&macro_param_1to1>
      , <&kp MACRO_PLACEHOLDER>
      , <&kp H>
      ;
  };
}; // end macros
};
